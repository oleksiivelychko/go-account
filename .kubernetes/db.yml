apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: gons
type: Opaque
stringData:
  POSTGRES_DB: account
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: secret

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config-init
  namespace: gons
data:
  init.sql: |
    CREATE USER kube WITH PASSWORD 'secret' CREATEDB;
    GRANT ALL PRIVILEGES ON DATABASE account TO kube;

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: gons
  labels:
    app: goaccount
spec:
  serviceName: postgres-svc
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app: goaccount
  template:
    metadata:
      labels:
        app: goaccount
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: db
          image: postgres:15.2-alpine
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: postgres-secret
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: db-init
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "64Mi" # mebibytes = 67.1089 MB
              cpu: "250m" # 0.25 CPU
            limits:
              memory: "128Mi" # mebibytes = 134.218 MB
              cpu: "500m" # 0.5 CPU
      volumes:
        -  name: db-init
           configMap:
             name: db-config-init
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-data-claim

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: gons
  labels:
    app: goaccount
spec:
  type: NodePort
  selector:
    app: goaccount
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      nodePort: 30432
